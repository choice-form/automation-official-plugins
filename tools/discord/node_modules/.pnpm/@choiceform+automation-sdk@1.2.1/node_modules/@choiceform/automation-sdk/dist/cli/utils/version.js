import fs from 'fs-extra';
import path from 'path';
import { fileURLToPath } from 'url';
import { dirname } from 'path';
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);
/**
 * 动态读取 SDK 版本号
 * @returns SDK 版本号
 */
export async function getSdkVersion() {
    try {
        const packageJsonPath = path.join(__dirname, '../../../package.json');
        const packageJson = await fs.readJson(packageJsonPath);
        return packageJson.version;
    }
    catch (error) {
        console.warn('无法读取 SDK 版本，使用默认版本');
        return '1.0.2';
    }
}
/**
 * 获取带版本前缀的 SDK 版本（用于依赖）
 * @param prefix 版本前缀，默认为 '^'
 * @returns 带前缀的版本号，如 '^1.0.2'
 */
export async function getSdkVersionWithPrefix(prefix = '^') {
    const version = await getSdkVersion();
    return `${prefix}${version}`;
}
/**
 * 获取 SDK 包名
 * @returns SDK 包名
 */
export function getSdkPackageName() {
    return '@choiceform/automation-plugin-sdk';
}
/**
 * 检查版本兼容性
 * @param userVersion 用户使用的版本
 * @param currentVersion 当前 SDK 版本
 * @returns 是否兼容
 */
export function isVersionCompatible(userVersion, currentVersion) {
    try {
        // 提取主版本号
        const userMajor = userVersion.replace(/[^\d.]/g, '').split('.')[0];
        const currentMajor = currentVersion.split('.')[0];
        return userMajor === currentMajor;
    }
    catch (error) {
        return false;
    }
}
