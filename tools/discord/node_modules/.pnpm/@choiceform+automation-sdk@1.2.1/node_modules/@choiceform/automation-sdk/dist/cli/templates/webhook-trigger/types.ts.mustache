/**
 * {{projectName}} - {{description}}
 * Webhook 相关类型定义
 */

export interface WebhookRequestData {
  body: any;
  headers: Record<string, string>;
  hostname: string;
  ip?: string;
  method: string;
  params: Record<string, string>;
  query: Record<string, any>;
  url: string;
}

export interface WebhookResponse {
  data: Record<string, any>;
  responseBody?: any;
  statusCode: number;
  success: boolean;
}

export interface WebhookTriggerOptions {
  allowedOrigins?: string;
  binaryPropertyName?: string;
  ignoreBots?: boolean;
  rawBody?: boolean;
}

export interface {{classNamePrefix}}TriggerSettings {
  authentication: 'none' | 'basicAuth' | 'headerAuth' | 'jwtAuth';
  httpMethod: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH' | 'HEAD';
  options: WebhookTriggerOptions;
  path: string;
  respond: 'immediately' | 'lastNode' | 'responseNode';
  responseCode: number;
  responseData: string;
}

export interface WebhookEvent {
  id: string;
  timestamp: number;
  type: 'webhook_initialized' | 'webhook_request' | 'webhook_error';
  data: Record<string, any>;
}

export interface WebhookTriggerInfo {
  url: string;
  method: string;
  path: string;
  authentication: string;
  respond: string;
  responseCode: number;
  options: WebhookTriggerOptions;
}

// 认证相关类型
export interface BasicAuthCredentials {
  username: string;
  password: string;
}

export interface HeaderAuthCredentials {
  headerName: string;
  headerValue: string;
}

export interface JwtAuthCredentials {
  token: string;
  secret?: string;
}

export type AuthCredentials = BasicAuthCredentials | HeaderAuthCredentials | JwtAuthCredentials; 