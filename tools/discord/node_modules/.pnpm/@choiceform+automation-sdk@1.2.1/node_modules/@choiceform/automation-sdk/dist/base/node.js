/**
 * 节点插件基础抽象类
 * 所有节点插件都应该继承此类并实现 execute 方法
 */
export class Node {
    /**
     * 验证输入数据
     * @param inputs 输入数据
     * @returns 验证结果
     */
    validateInputs(_inputs) {
        // 子类可以重写此方法进行自定义验证
        return true;
    }
    /**
     * 创建成功结果
     * @param data 数据
     * @returns 执行结果
     */
    createSuccessResult(data) {
        return {
            success: true,
            data
        };
    }
    /**
     * 创建错误结果
     * @param message 错误信息
     * @returns 执行结果
     */
    createErrorResult(message) {
        return {
            success: false,
            error: {
                message
            }
        };
    }
    /**
     * 安全地记录日志
     * @param context 执行上下文
     * @param level 日志级别
     * @param message 日志信息
     */
    log(context, level, message) {
        try {
            context.log(level, `[${this.constructor.name}] ${message}`);
        }
        catch (error) {
            console.error('Failed to log message:', error);
        }
    }
    /**
     * 安全地获取凭据
     * @param context 执行上下文
     * @param name 凭据名称
     * @returns 凭据值
     */
    async getCredential(context, name) {
        try {
            return await context.getCredential(name);
        }
        catch (error) {
            this.log(context, 'error', `Failed to get credential '${name}': ${error}`);
            return undefined;
        }
    }
    /**
     * 安全地存储数据
     * @param context 执行上下文
     * @param key 键名
     * @param value 值
     */
    async storeData(context, key, value) {
        try {
            await context.storeData(key, value);
            this.log(context, 'info', `Data stored with key: ${key}`);
        }
        catch (error) {
            this.log(context, 'error', `Failed to store data '${key}': ${error}`);
        }
    }
    /**
     * 安全地检索数据
     * @param context 执行上下文
     * @param key 键名
     * @returns 存储的值
     */
    async retrieveData(context, key) {
        try {
            return await context.retrieveData(key);
        }
        catch (error) {
            this.log(context, 'error', `Failed to retrieve data '${key}': ${error}`);
            return null;
        }
    }
}
