import type { CreatePluginOptions } from "../../types";
interface TemplateContext {
    name: string;
    author: string;
    description: string;
    kebabName: string;
    pascalName: string;
    camelName: string;
    createdAt: string;
    [key: string]: string;
}
/**
 * 处理模板文件（简单的字符串替换）
 */
export declare function processTemplate(content: string, context: TemplateContext): string;
/**
 * 递归拷贝并处理模板目录
 */
export declare function copyTemplateDirectory(templatePath: string, targetPath: string, context: TemplateContext): Promise<void>;
/**
 * 生成项目名称的各种格式
 */
export declare function generateNameVariants(name: string): Pick<TemplateContext, "kebabName" | "pascalName" | "camelName">;
/**
 * 生成插件模板
 */
export declare function generatePlugin(options: CreatePluginOptions): Promise<void>;
export {};
//# sourceMappingURL=generator.d.ts.map