/**
 * 插件注册表实现
 */
export class PluginRegistryImpl {
    constructor() {
        this.plugins = new Map();
    }
    register(manifest) {
        this.plugins.set(manifest.automationNodeType, manifest);
    }
    unregister(nodeType) {
        this.plugins.delete(nodeType);
    }
    get(nodeType) {
        return this.plugins.get(nodeType);
    }
    list() {
        return Array.from(this.plugins.values());
    }
    search(query) {
        const lowerQuery = query.toLowerCase();
        return this.list().filter((manifest) => manifest.name.toLowerCase().includes(lowerQuery) ||
            manifest.description.toLowerCase().includes(lowerQuery) ||
            manifest.tags.some((tag) => tag.toLowerCase().includes(lowerQuery)));
    }
    clear() {
        this.plugins.clear();
    }
}
/**
 * 全局插件注册表实例
 */
export const globalPluginRegistry = new PluginRegistryImpl();
/**
 * 注册插件
 */
export function registerPlugin(manifest) {
    globalPluginRegistry.register(manifest);
}
/**
 * 获取插件
 */
export function getPlugin(nodeType) {
    return globalPluginRegistry.get(nodeType);
}
/**
 * 列出所有插件
 */
export function listPlugins() {
    return globalPluginRegistry.list();
}
/**
 * 搜索插件
 */
export function searchPlugins(query) {
    return globalPluginRegistry.search(query);
}
//# sourceMappingURL=index.js.map